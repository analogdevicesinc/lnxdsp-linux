/*
 * Device tree for ADI sc594-som-ezkit board
 *
 * Copyright 2014 - 2020 Analog Devices Inc.
 *
 * Licensed under the GPL-2 or later.
 *
 */

/dts-v1/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/adi-adsp.h>
#include <dt-bindings/pinctrl/adi-adsp-sru.h>
#include <dt-bindings/net/ti-dp83867.h>
#include "sc59x.dtsi"

/ {
	model = "ADI sc594-som-ezkit";
	compatible = "adi,sc594-som-ezkit", "adi,sc59x";

	aliases {
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0xa0000000 0x20000000>;
	};

#ifdef IGNORE_FOR_NOW
	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		vdev0vrings: vdev0vring0@20010000 {
			reg = <0x20010000 0x4000>;
			no-map;
		};

		vdev0buffer: vdev0buffer@20014000 {
			compatible = "shared-dma-pool";
			reg = <0x20014000 0x20000>;
			no-map;
		};

		vdev1vrings: vdev0vring0@20034000 {
			reg = <0x20034000 0x4000>;
			no-map;
		};

		vdev1buffer: vdev0buffer@20038000 {
			compatible = "shared-dma-pool";
			reg = <0x20038000 0x20000>;
			no-map;
		};
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		rsc_tbl0: rsc_tbl0@20000000 {
			reg = <0x20000000 0x400>; /*1KiB*/
			no-map;
		};

		rsc_tbl1: rsc_tbl0@20000400 {
			reg = <0x20000400 0x400>; /*1KiB*/
			no-map;
		};

		sram_B1_unused@20000800 {
			reg = <0x20000800 0x4800>; /*18KiB*/
			no-map;
		};

		sharc_internal_icc@20005000 {
			reg = <0x20005000 0x20000>; /*128KiB*/
			no-map;
		};
	};
#endif

	scb {

/* The button GPIO conflicts with OSPI0_D4 for this
		button0: button@0 {
			compatible = "adi,button-led";
			button_gpio = <48>; /* PD_00
			led_gpio = <35>; /* PC_03 / LED9 / LED1_KIT
		};
*/

/* This also appears to interfere with the OSPI somehow...
   possible trace noise/interference?
		button1: button@1 {
			compatible = "adi,button-led";
			button_gpio = <112>; /* PH_00
			led_gpio = <34>; /* PC_02 / LED8 / LED2_KIT
		};
*/

		sharc0: core1-rproc@0x28240000 {
			compatible = "adi,remoteproc";
			reg = <0x28240000 0x160000>,
					<0x20000000 0x200000>;
			core-id = <1>;
			core-irq = <74>; /* SOFT1 */
			firmware-name = "adi_adsp_core1_fw.ldr";
			interrupts = <GIC_SPI 165 IRQ_TYPE_EDGE_RISING>; /* TRU0_SLV3 */
			adi,rcu = <&rcu>;
			adi,l1-da = <0x240000 0x3a0000>;
			adi,l2-da = <0x20000000 0x20200000>;
			/*adi,rsc-table = <&rsc_tbl0>;*/
			adi,verify = <1>;
			adi,tru = <&tru>;
			adi,tru-master-id = <140>; /* trigger master SOFT4 */
			status = "okay";
		};

		sharc1: core2-rproc@0x28a40000 {
			compatible = "adi,remoteproc";
			reg = <0x28a40000 0x160000>,
					<0x20000000 0x200000>;
			core-id = <2>;
			core-irq = <75>; /* SOFT2 */
			firmware-name = "adi_adsp_core2_fw.ldr";
			interrupts = <GIC_SPI 165 IRQ_TYPE_EDGE_RISING>; /* TRU0_SLV3 */
			adi,rcu = <&rcu>;
			adi,l1-da = <0x240000 0x3a0000>;
			adi,l2-da = <0x20000000 0x20200000>;
			/*adi,rsc-table = <&rsc_tbl1>;*/
			adi,verify = <1>;
			adi,tru = <&tru>;
			adi,tru-master-id = <141>; /* trigger master SOFT5 */
			status = "okay";
		};

		sound {
			compatible = "sc5xx,asoc-card";
			adi,cpu-dai = <&i2s4>;
			adi,codec = <&adau1962>, <&adau1979>;
			iram = <&sram1>;
		};

/*
		lcd@0 {
			compatible = "sc58x,lcd";
			reg = <0x31040000 0xFF>;
			interrupts = <GIC_SPI 83 IRQ_TYPE_LEVEL_HIGH>;
			dma-channel = <28>;
			cs-gpio = <39>;
			spu_securep_id = <95>;
			pinctrl-names = "default", "ppi_16b", "ppi_24b";
			pinctrl-0 = <&ppi0_8b>;
			pinctrl-1 = <&ppi0_16b>;
			pinctrl-2 = <&ppi0_24b>;
		};
*/
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_default>;
	status = "okay";
};

&rtc0 {
	status = "disabled";
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_default>;
	status = "disabled";

	cs-gpios = <&gpc 12 GPIO_ACTIVE_LOW>,
				<&gpc 0 GPIO_ACTIVE_LOW>;

	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <5000000>;
		reg = <0>;
	};

	ad7879_touchscreen@1 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "adi,ad7879";
		spi-max-frequency = <5000000>;
		reg = <1>;
		gpio = <88>;
		gpio-controller;
		spi-cpha;
		spi-cpol;
		touchscreen-max-pressure = <10000>;
		adi,resistance-plate-x = <620>;
		adi,first-conversion-delay = /bits/ 8 <3>;
		adi,acquisition-time = /bits/ 8 <1>;
		adi,median-filter-size = /bits/ 8 <2>;
		adi,averaging = /bits/ 8 <1>;
		adi,conversion-interval = /bits/ 8 <255>;
	};
};

&spi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi1_default>;
	status = "okay";

	cs-gpios = <&gpa 13 GPIO_ACTIVE_LOW>;

	spidev@0{
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <5000000>;
		reg = <0>;
	};
};

&spi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi2_quad>;
	status = "okay";

	cs-gpios = <&gpa 5 GPIO_ACTIVE_LOW>;

/* mx66lm1g45 and is25lp512 are mutually exclusive */

/*
	flash: mx66lm1g45@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "mx66lm1g45", "jedec,spi-nor";
		spi-max-frequency = <5000000>;
		reg = <0>;
		spi-cpol;
		spi-cpha;
		spi-rx-bus-width = <4>;

		partition@0 {
			label = "unallocated (mx66)";
			reg = <0x0 0x2000000>;
		};

	};
*/

	flash: is25lp512@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "is25lp512", "jedec,spi-nor";
		spi-max-frequency = <5000000>;
		reg = <0>;
		spi-cpol;
		spi-cpha;
		spi-rx-bus-width = <4>;
		/*adi,enable-dma;*/

		partition@0 {
			label = "unallocated (is25lp512)";
			reg = <0x0 0x2000000>;
		};

	};

};

&ospi {
	pinctrl-names = "default";
	pinctrl-0 = <&ospi_default>;

	status = "okay";

	flash0: is25lx256@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "is25lx256";
		reg = <0>;

		/* Adjust as needed, depends on board signal integrity
		    -- I was seeing issues with data writes at faster speeds */
		spi-max-frequency = <36000000>;

		/*m25p,fast-read;*/

		cdns,page-size = <256>;
		cdns,block-size = <16>;
		cdns,read-delay = <4>;
		cdns,tshsl-ns = <50>;
		cdns,tsd2d-ns = <50>;
		cdns,tchsh-ns = <4>;
		cdns,tslch-ns = <4>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			ospi_0: partition@0 {
				label = "U-Boot";
				reg = <0x0 0x80000>;
			};

			ospi_1: partition@1 {
				label = "U-Boot Environment";
				reg = <0x80000 0x20000>;
			};

			ospi_2: partition@2 {
				label = "Device Tree Blob";
				reg = <0xA0000 0x20000>;
			};

			ospi_3: partition@3 {
				label = "Kernel zImage";
				reg = <0xC0000 0x600000>;
			};

			ospi_4: partition@4 {
				label = "JFFS2 Formatted RFS";
				reg = <0x6C0000 0x1940000>;
			};
		};
	};
};

&i2c0 {
	status = "disabled";
};

&i2c1 {
	status = "disabled";
};

&i2c2 {
	status = "okay";

	ssw0: gpio@0x21 {
		compatible = "microchip,mcp23017";
		gpio-controller;
		#gpio-cells = <2>;
		reg = <0x21>;

		led1 {
			gpio-hog;
			gpios = <0 0x0>;
			output-high;
			line-name = "led1-en";
		};

		led2 {
			gpio-hog;
			gpios = <1 0x0>;
			output-high;
			line-name = "led2-en";
		};

		led3 {
			gpio-hog;
			gpios = <2 0x0>;
			output-high;
			line-name = "led3-en";
		};

		spi2flash-cs {
			gpio-hog;
			gpios = <3 0x0>;
			output-low;
			line-name = "~spi2flash-cs";
		};

		spi2d2-d3 {
			gpio-hog;
			gpios = <4 0x0>;
			output-low;
			line-name = "~spi2d2-d3-en";
		};

		uart0 {
			gpio-hog;
			gpios = <5 0x0>;
			output-low;
			line-name = "~uart0-en";
		};

		uart0-flow-en {
			gpio-hog;
			gpios = <6 0x0>;
			output-high;
			line-name = "~uart0-flow-en";
		};

		ospiflash-cs {
			gpio-hog;
			gpios = <7 0x0>;
			output-low;
			line-name = "~ospiflash-cs";
		};
	};

	ssw1: gpio@0x22 {
		compatible = "microchip,mcp23017";
		gpio-controller;
		#gpio-cells = <2>;
		reg = <0x22>;

		eeprom {
			gpio-hog;
			gpios = <0 0x0>;
			output-low;
			line-name = "eeprom-en";
		};

		pushbutton {
			gpio-hog;
			gpios = <1 0x0>;
			output-low;
			line-name = "pushbutton-en";
		};

		microsd {
			gpio-hog;
			gpios = <2 0x0>;
			output-high;
			line-name = "~microsd-spi";
		};

		adau-reset {
			gpio-hog;
			gpios = <5 0x0>;
			output-high;
			line-name = "adau1962-reset";
		};

		adau1962 {
			gpio-hog;
			gpios = <6 0x0>;
			output-low;
			line-name = "adau1962-en";
		};

		adau1979 {
			gpio-hog;
			gpios = <7 0x0>;
			output-low;
			line-name = "adau1979-en";
		};

		octal {
			gpio-hog;
			gpios = <8 0x0>;
			output-low;
			line-name = "octal-spi-cs-en";
		};

		spdif-dig {
			gpio-hog;
			gpios = <9 0x0>;
			output-high;
			line-name = "~spdif-digital-en";
		};

		spdif-opt {
			gpio-hog;
			gpios = <10 0x0>;
			output-high;
			line-name = "~spdif-optical-en";
		};

		audio-jack {
			gpio-hog;
			gpios = <11 0x0>;
			output-high;
			line-name = "audio-jack-sel";
		};

		mlb {
			gpio-hog;
			gpios = <12 0x0>;
			output-high;
			line-name = "~mlb-en";
		};

		eth1 {
			gpio-hog;
			gpios = <13 0x0>;
			output-low;
			line-name = "~eth1-en";
		};

		eth1-reset {
			gpio-hog;
			gpios = <14 0x0>;
/* USB0 lines are shared with Eth1 so  Eth PHY must be held in reset
   when using the USB */
			output-low;
			line-name = "~eth1-reset";
		};

		gige-reset {
			gpio-hog;
			gpios = <15 0x0>;
			output-high;
			line-name = "~gige-reset";
		};

	};

	adau1979: adau1979@0x11 {
		compatible = "adi,adau1977";
		reg = <0x11>;
	};

	adau1962: adau1962@0x4 {
		compatible = "adi,adau1962";
		reg = <0x4>;
	};

};

&i2s4 {
	pinctrl-names = "default";
	pinctrl-0 = <&sru_dai1>;
	status = "okay";
};

&crc0 {
	status = "disabled";
};

&crc1 {
	status = "disabled";
};

&can0 {
	pinctrl-names = "default";
	/*pinctrl-0 = <&can0_default>;*/
	phy-name = "tja1055";
	phy-gpios = <&gpb 8 0>,		/* en PB8 */
		    <&gpb 2 0x1>;	/* stb PB2, GPIO_ACTIVE_LOW */
	status = "disabled";
};

&can1 {
	pinctrl-names = "default";
	/*pinctrl-0 = <&can1_default>;*/
	phy-name = "tja1145";
	phy-spibus = /bits/ 16 <0>;
	phy-spiclk = <1000000>;
	phy-spics = /bits/ 16 <44>;	/* GPIO_PC12 */
	status = "disabled";
};


&emac0 {
	snps,reset-active-low;
	snps,reset-delays-us = <0 200 500>;
	phy-handle = <&dp83867>;
	phy-mode = "rgmii-id";
	pinctrl-names = "default";
	pinctrl-0 = <&eth0_default>;
	status = "okay";
	snps,mtl-rx-config = <&emac0rxconfig>;
	snps,mtl-tx-config = <&emac0txconfig>;

	emac0txconfig: tx-config {
		snps,tx-queues-to-use = <3>;

		queue0 {
			snps,dcb-algorithm;
		};

		queue1 {
			snps,dcb-algorithm;
		};

		queue2 {
			snps,dcb-algorithm;
		};
	};

	emac0rxconfig: rx-config {
		snps,rx-queues-to-use = <1>;

		queue0 {
			snps,dcb-algorithm;
		};

		queue1 {
			snps,dcb-algorithm;
		};

		queue2 {
			snps,dcb-algorithm;
		};
	};

	mdio0 {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;
		dp83867: ethernet-phy@0 {
			reg = <0>;
			ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
			ti,tx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
			ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_8_B_NIB>;
			ti,dp83867-rxctrl-strap-quirk;
		};
	};
};

&emac1 {
	phy-handle = <&dp83848>;
	phy-mode = "rmii";
	pinctrl-names = "default";
	pinctrl-0 = <&eth1_default>;
	status = "disabled";

	mdio1 {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;
		dp83848: ethernet-phy@1 {
			reg = <1>;
		};
	};
};

&usb0_phy {
	reset-gpios = <&gpg 11 GPIO_ACTIVE_LOW>;
	status = "okay";
};

&usb0 {
	dr_mode = "host";
	pinctrl-names = "default";
	pinctrl-0 = <&usbc0_default>;
	status = "okay";
};

&mmc0 {
	/* wp-en-pin = <&ssw0 ? GPIO_ACTIVE_LOW>;	 SD_WP_EN */
	bus-width = <4>;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_8bgrp>;
	supports-highspeed;
	status = "disabled";
};

&icc0 {
	adi,tru = <&tru>;
	status = "okay";
};

/*
&video_decoder {
	pinctrl-names = "8bit", "16bit", "24bit";
	pinctrl-0 = <&ppi0_8b>;
	pinctrl-1 = <&ppi0_16b>;
	pinctrl-2 = <&ppi0_24b>;
	status = "disabled";
};

&video_encoder {
	pinctrl-names = "8bit", "16bit", "24bit";
	pinctrl-0 = <&ppi0_8b>;
	pinctrl-1 = <&ppi0_16b>;
	pinctrl-2 = <&ppi0_24b>;
	status = "disabled";
};
*/


/*
&lp0 {
	pinctrl-names = "default";
	pinctrl-0 = <&lp0_default>;
	status = "okay";
};

&lp1 {
	pinctrl-names = "default";
	pinctrl-0 = <&lp1_default>;
	status = "okay";
};
*/

&sram_mmap {
	status = "disabled";
};

&pinctrl0 {
	uart0_default: uart0_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('A', 6, ADI_ADSP_PINFUNC_ALT1)>,
					 <ADI_ADSP_PINMUX('A', 7, ADI_ADSP_PINFUNC_ALT1)>;
		};
	};
	uart0_hwflow: uart0_hwflow_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('A', 6, ADI_ADSP_PINFUNC_ALT1)>,
					 <ADI_ADSP_PINMUX('A', 7, ADI_ADSP_PINFUNC_ALT1)>,
					 <ADI_ADSP_PINMUX('A', 8, ADI_ADSP_PINFUNC_ALT1)>,
					 <ADI_ADSP_PINMUX('A', 9, ADI_ADSP_PINFUNC_ALT1)>;
		};
	};
	spi0_default: spi0_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('A', 6, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('A', 7, ADI_ADSP_PINFUNC_ALT0)>,
					 <ADI_ADSP_PINMUX('A', 8, ADI_ADSP_PINFUNC_ALT0)>;
		};
	};
	spi1_default: spi1_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('A', 10, ADI_ADSP_PINFUNC_ALT1)>,
			         <ADI_ADSP_PINMUX('A', 11, ADI_ADSP_PINFUNC_ALT1)>,
					 <ADI_ADSP_PINMUX('A', 12, ADI_ADSP_PINFUNC_ALT1)>;
		};
	};
	spi2_quad: spi2_quad_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('A', 0, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('A', 1, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('A', 2, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('A', 3, ADI_ADSP_PINFUNC_ALT0)>,
					 <ADI_ADSP_PINMUX('A', 4, ADI_ADSP_PINFUNC_ALT0)>;
		};
	};
	ospi_default: ospi_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('C', 8, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('C', 9, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('C', 10, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('C', 11, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('C', 12, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('C', 13, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('C', 14, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('C', 15, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('D', 0, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('D', 1, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('D', 4, ADI_ADSP_PINFUNC_ALT2)>;
		};
	};
	i2c2_pins: i2c2_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('A', 14, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('A', 15, ADI_ADSP_PINFUNC_ALT0)>;
		};
	};
	eth0_default: eth0_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('H', 3, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 4, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 5, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 6, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 7, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 8, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 9, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 10, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 11, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 12, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 13, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 14, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('H', 15, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('I', 0, ADI_ADSP_PINFUNC_ALT0)>;
		};
	};
	eth1_default: eth1_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('E', 11, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('E', 12, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('E', 13, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('E', 14, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('E', 15, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 0, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 1, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 2, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 3, ADI_ADSP_PINFUNC_ALT0)>;
		};
	};
	mmc0_8bgrp: mmc0_8bgrp_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('F', 2, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 3, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 4, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 5, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 6, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 7, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 8, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 9, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 10, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 11, ADI_ADSP_PINFUNC_ALT0)>,
			         <ADI_ADSP_PINMUX('F', 12, ADI_ADSP_PINFUNC_ALT0)>;
		};
	};
	usbc0_default: usbc0_default_pins {
		pins {
			pinmux = <ADI_ADSP_PINMUX('F', 3, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 4, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 5, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 6, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 7, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 8, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 9, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 10, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 11, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 12, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 13, ADI_ADSP_PINFUNC_ALT2)>,
			         <ADI_ADSP_PINMUX('F', 14, ADI_ADSP_PINFUNC_ALT2)>;
		};
	};
};

&sru_ctrl_dai0 {
	status = "okay";
};

&sru_ctrl_dai1 {
	status = "okay";

	sru_dai1: sru_dai1_mux {
		route {
			sru-routing =
				<DAI1_LOW_F          DAI1_PBEN05_I>,  /* set DAI1_PIN0B to input */
				<DAI1_PB05_O_ABCDE   SPT4_ACLK_I>,    /* route DAI1_PIN0B to SPT4_ACLK */
				<DAI1_LOW_F          DAI1_PBEN04_I>,  /* set DAI1_PIN04 to input */
				<DAI1_PB04_O_ABCDE   SPT4_AFS_I>,     /* route DAI1_PIN04 to SPT4_AFS */
				<DAI1_HIGH_F         DAI1_PBEN01_I>,  /* set DAI1_PIN01 to output */
				<SPT4_AD0_O_BD       DAI1_PB01_I>,    /* route SPT4_AD0 to DAI1_PIN01 */
				<DAI1_LOW_F          DAI1_PBEN12_I>,  /* set DAI1_PIN12 to input */
				<DAI1_PB12_O_ABCDE   SPT4_BCLK_I>,    /* route DAI1_PIN12 to SPT4_BCLK */
				<DAI1_LOW_F          DAI1_PBEN20_I>,  /* set DAI1_PIN20 to input */
				<DAI1_PB20_O_ABCDE   SPT4_BFS_I>,     /* route DAI1_PIN20 to SPT4_BFS */
				<DAI1_LOW_F          DAI1_PBEN06_I>,  /* set DAI1_PIN06 to input */
				<DAI1_PB06_O_ABCDE   SPT4_BD0_I>;     /* route DAI1_PIN06 to SPT4_BD0 */
		};
	};
};

&tru {
	rpmsg_to_a55: channel@0 {
		adi,tru-master-id = <139>; /* trigger master SOFT3 */
		adi,tru-slave-id = <160>; /* TRU0_IRQ3 */
	};
	rpmsg_to_sharc0: channel@1 {
		adi,tru-master-id = <140>; /* trigger master SOFT4 */
		adi,tru-slave-id = <164>; /* TRU0_IRQ7 */
	};
	rpmsg_to_sharc1: channel@2 {
		adi,tru-master-id = <141>; /* trigger master SOFT5 */
		adi,tru-slave-id = <168>; /* TRU0_IRQ11 */
	};
};
